{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"0QAIMA,E,qLAEU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC9B,yBAAKF,UAAU,yBACb,4BAAQA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAD7C,WAKF,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAOrC,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAnB3BC,IAAMC,WA2BdC,eAJS,SAACC,GACvB,MAAO,CAAEZ,MAAOY,EAAMZ,SAKtB,CAAEO,WChCsB,SAAAL,GACtB,MAAO,CACLW,KAAM,gBACNC,QAASZ,KD2BAS,CAGbd,GETac,eAJS,SAAC,GACvB,MAAO,CAAET,KADmC,EAAnBa,gBAIZJ,EArBI,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACpB,OAAKA,EAIH,6BACA,4CACA,qCACUA,EAAKG,MACb,6BAFF,aAGaH,EAAKc,WARX,iDCaIC,EAfH,WACR,OACE,yBAAKd,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,UCMGe,cAAgB,CAC7BlB,MAjBmB,WACnB,MAAO,CACL,CAAEK,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,qBAAsBW,SAAU,UAa3CD,aAT0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAETC,KCPTK,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.1745a05b.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nclass SongList extends React.Component {\n\n  renderList() {\n    return this.props.songs.map(song => {\n      return (\n        <div className=\"item\" key={song.title}>\n          <div className=\"right floated content\">\n            <button className=\"ui button primary\"\n                    onClick={() => this.props.selectSong(song)}>\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { songs: state.songs };\n}\n\nexport default connect(\n  mapStateToProps,\n  { selectSong }\n)(SongList);\n","// Action creators\nexport const selectSong = song => {\n    return {\n      type: 'SONG_SELECTED',\n      payload: song\n    };\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Select a song</div>;\n  }\n  return (\n    <div>\n    <h3>Details for:</h3>\n    <p>\n      Title: {song.title}\n      <br />\n      Duration: {song.duration}\n    </p>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = ({ selectedSong }) => {\n  return { song: selectedSong };\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\nconst App = () => {\n    return (\n      <div className=\"ui container grid\">\n        <div className=\"ui row\">\n          <div className=\"column eight wide\">\n            <SongList />\n          </div>\n          <div className=\"column eight wide\">\n            <SongDetail />\n          </div>\n        </div>\n      </div>\n    );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n  return [\n    { title: 'No Scrubs', duration: '4:05' },\n    { title: 'Macarena', duration: '2:30' },\n    { title: 'All Star', duration: '3:15' },\n    { title: 'I Want It That Way', duration: '1:45' }\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}